{"version":3,"sources":["components/Login/Login.jpg","components/Login/googleIcon.svg","history.js","components/Login/Login.js","components/Notification.js","actions/index.js","components/Signup/Signup.js","components/Filter.js","containers/AddTodo.js","containers/List.js","components/Home.js","fire.js","components/Header/Header.js","components/App/App.js","components/ForgetPassword.js","routes.js","reducers/app.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","Copyright","props","React","Typography","Object","assign","variant","color","align","Link","href","Date","getFullYear","defaultTheme","createTheme","Login","history","useHistory","console","log","googleProvider","GoogleAuthProvider","ThemeProvider","theme","Toolbar","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","concat","LoginImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","onSubmit","event","preventDefault","data","FormData","currentTarget","email","get","password","auth","getAuth","signInWithEmailAndPassword","then","userCredential","user","catch","error","code","alert","message","mt","TextField","type","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","Button","mb","onClick","push","Divider","flexItem","justifyContent","provider","signInWithPopup","result","displayName","Error","signInWithAuth","border","borderRadius","cursor","src","googleIcon","alt","width","pr","pl","fontWeight","Alert","ref","MuiAlert","Notification","openNotification","setOpenNotification","handleClose","Snackbar","open","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","updateAppState","state","updateTodoState","VisibilityFilters","connect","app","dispatch","_React$useState","_React$useState2","_slicedToArray","setMessage","_React$useState3","_React$useState4","Container","maxWidth","marginTop","createUserWithEmailAndPassword","setTimeout","updateProfile","currentUser","_this","spacing","inputProps","minLength","Filter","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","createElement","className","onChange","handleFilterChange","Component","todos","addDueDate","date","_useState","useState","_useState2","input","setInput","useEffect","currentTodoData","userId","uid","db","getDatabase","listRef","newListRef","update","e","trim","Promise","resolve","addTodo","Stack","style","background","target","DatePicker","selected","dueDate","placeholderText","List","_React$Component","displayList","map","index","dateTime","diffDays","text","Math","abs","status","title","statusToggle","handleDeleteList","visibilityFilter","listQueue","dbRef","child","snapshot","exists","val","onChildAdded","listvalue","length","handleChildAddedQueue","statusToggleData","updateListRef","list","filter","i","_toConsumableArray","sort","_ref","_ref2","_console","doneTasks","forEach","today","diffTime","getTime","ceil","showListLoader","AddTodo","Loader","Fragment","seletedOption","selectedOptions","optionName","getAttribute","toLowerCase","stopPropagation","confirmAlert","buttons","deleteList","removeListRef","remove","statusToggleTodo","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","HideOnScroll","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","Header","handleLogOut","anchorElUser","setAnchorElUser","handleCloseUserMenu","AppBar","disableGutters","location","flexGrow","Tooltip","IconButton","Menu","anchorEl","keepMounted","transformOrigin","Boolean","MenuItem","textAlign","firebase","showAppLoader","onAuthStateChanged","signOut","SignIn","sendPasswordResetEmail","Routes","Router","Route","path","App","Switch","Signup","Home","ForgetPassword","showSignup","showFP","action","_objectSpread","getMonth","getDate","find","combineReducers","createStore","rootReducer","applyMiddleware","thunk","store","subscribe","getState","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.986efb0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Login.d3c2beee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/googleIcon.45aebcf8.svg\";","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport { Divider, Toolbar, Grid, Box, Paper, Typography, Link, Checkbox, FormControlLabel, TextField, CssBaseline, Icon } from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LoginImage from \"./Login.jpg\"\r\nimport googleIcon from \"./googleIcon.svg\"\r\nimport { getAuth, signInWithPopup, signInWithEmailAndPassword, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"\">\r\n        Todolist\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Login(props) {\r\n  const history = useHistory();\r\n  console.log(history)\r\n  const googleProvider = new GoogleAuthProvider();\r\n  const signInWithAuth = (provider) => {\r\n    const auth = getAuth();\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        console.log('Login Successfully', result.user.displayName)\r\n        history.push(\"/home\");\r\n      }).catch((error) => {\r\n        throw new Error(error)\r\n      });\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const email = data.get('email');\r\n    const password = data.get('password');\r\n    const auth = getAuth();\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        const user = userCredential.user;\r\n        console.log('Login successfully', user)\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error occurred', error)\r\n        // this.setState({ error: error.message });\r\n        if (error.code === 'auth/wrong-password') {\r\n          alert('Wrong password');\r\n        } else if (error.code === 'auth/user-not-found') {\r\n          alert('There is no user record corresponding to this email. Please signup or Login with Social Media');\r\n        } else {\r\n          alert(error.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Toolbar />\r\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: `url(${LoginImage})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n              <TextField\r\n                type='email'\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Box>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"body2\"\r\n                  onClick={() => {\r\n                    history.push(\"/forgetPassword\")\r\n                  }}>\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  component=\"button\"\r\n                  variant=\"body2\"\r\n                  onClick={() => {\r\n                    history.push(\"/signup\")\r\n                  }}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider sx={{ mt: 2 }} flexItem>\r\n              OR\r\n            </Divider>\r\n            <Grid container sx={{\r\n              mt: 3, mb: 2,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}>\r\n              <Grid\r\n                item\r\n                onClick={()=>{\r\n                  signInWithAuth(googleProvider)\r\n                }}\r\n                sx={{\r\n                  display: \"flex\", border: \"1px solid #dadce0\", borderRadius: \"20px\",\r\n                  justifyContent: \"center\", alignItems: \"center\", cursor: \"pointer\",\r\n                  p: 0.8\r\n                }}\r\n              >\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <img src={googleIcon} alt='googleIcon' height={25} width={25} />\r\n                </Box>\r\n                <Typography sx={{ pr: 5.2, pl: 2, color: \"#3c4043\", fontWeight: \"500\" }}>\r\n                  Continue with Google\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Copyright sx={{ mt: 5 }} />\r\n\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}","import * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function Notification(props) {\r\n    console.log(props)\r\n    const { openNotification, setOpenNotification } = props\r\n\r\n    const handleClose = (event) => {\r\n        setOpenNotification(false);\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            open={openNotification}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                {props.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","// export const addTodo = input => ({\r\n//   type: 'ADD_TODO',\r\n//   input\r\n// })\r\n\r\nexport const addTodo = (input) => dispatch => {\r\n  dispatch({\r\n    type: 'ADD_TODO',\r\n    input\r\n  });\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const addDueDate = date => ({\r\n  type: 'ADD_DUE_DATE',\r\n  date\r\n})\r\n\r\n// export const updateList = (state) => dispatch => {\r\n//   dispatch({\r\n//     type: 'UPDATE_LIST',\r\n//     state\r\n//   });\r\n//   return Promise.resolve();\r\n// };\r\n\r\nexport const updateAppState = (state) => ({\r\n  type: 'UPDATE_APP_STATE',\r\n  state\r\n});\r\n\r\nexport const updateTodoState = (state) => ({\r\n  type: 'UPDATE_TODO_STATE',\r\n  state\r\n});\r\n\r\nexport const deleteList = (id) => ({\r\n  type: 'DELETE_LIST',\r\n  id\r\n});\r\n\r\nexport const setVisibilityFilter = (filter) => dispatch => {\r\n  dispatch({\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n  });\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const statusToggleTodo = (id) => dispatch => {\r\n  dispatch({\r\n    type: 'STATUS_TOGGLE_TODO',\r\n    id\r\n  });\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'all',\r\n  SORT_BY_DUE_DATE: 'due',\r\n  DONE: 'done',\r\n  REMAINING: 'remaining'\r\n}\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Notification from '../Notification';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getAuth, updateProfile, createUserWithEmailAndPassword } from '@firebase/auth';\r\nimport { connect } from 'react-redux'\r\nimport { updateAppState } from '../../actions'\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const [message, setMessage] = React.useState('');\r\n  const [openNotification, setOpenNotification] = React.useState(false);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const name = data.get('name');\r\n    const email = data.get('email');\r\n    const password = data.get('password')\r\n    const auth = getAuth();\r\n    createUserWithEmailAndPassword(auth, email, password).then((userCredential) => {\r\n      console.log('Signup successfully', userCredential, name)\r\n      setOpenNotification(true)\r\n      setMessage('Signup successfully.')\r\n      setTimeout(() => {history.push(\"/\")}, 3000)\r\n      return updateProfile(auth.currentUser, {\r\n        displayName: name,\r\n      }).then(() => {\r\n        console.log('user profile updated', this.state.name)\r\n        this.props.dispatch(updateAppState({\r\n          user: auth.currentUser,\r\n        }))\r\n      }).catch((error) => {\r\n        // throw new Error(error)\r\n      });\r\n    })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        if(error.code === 'auth/email-already-in-use'){\r\n          setOpenNotification(true)\r\n          setMessage('The email already in use.')\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"given-name\"\r\n                name=\"name\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type='email'\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n                inputProps={{ minLength: 6 }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link\r\n                component=\"button\"\r\n                variant=\"body2\"\r\n                onClick={() => {\r\n                  history.push(\"/login\")\r\n                }}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      <Notification message={message} openNotification={openNotification} setOpenNotification={setOpenNotification} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.app\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nclass Filter extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Filter'>\r\n                <div className=\"filterWrapper\">\r\n                    <div className=\"row\">\r\n                        <div className='filterHeading'> Filter </div>\r\n                        <div className='selectWrapper'>\r\n                        <select name='filter' onChange={this.props.handleFilterChange}>\r\n                            <option name=\"all\" value=\"Sort By Date Created\">Sort By Date Created</option>\r\n                            <option name=\"due\" value=\"Remaining Task\">Sort By Due Date</option>\r\n                            <option name=\"done\" value=\"All Done Task\">All Done Task</option>\r\n                            <option name=\"remaining\" value=\"Remaining Task\">Remaining Task</option>\r\n                        </select>\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;","import React, { useEffect, useState } from 'react'\r\nimport { TextField, Stack, Box, Toolbar, Button } from '@mui/material';\r\nimport { getAuth } from '@firebase/auth';\r\nimport { getDatabase, ref, update, push } from \"firebase/database\";\r\nimport { connect } from 'react-redux'\r\nimport { addTodo, addDueDate } from '../actions'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst AddTodo = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n  useEffect(() => {\r\n    if (props.todos.currentTodoData) {\r\n      const auth = getAuth()\r\n      const userId = auth.currentUser.uid;\r\n      const db = getDatabase();\r\n      const listRef = ref(db, 'users/' + userId + '/list')\r\n      const newListRef = push(listRef);\r\n      update(newListRef, props.todos.currentTodoData);\r\n    }\r\n  }, [props.todos.currentTodoData])\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!input.trim()) {\r\n      return\r\n    }\r\n    props.dispatch(addTodo(input));\r\n    setInput(\"\");\r\n  }\r\n  return (\r\n    <Box sx={{ width: \"50%\" }}>\r\n      <Toolbar />\r\n      <form onSubmit={handleSubmit}>\r\n        <Stack spacing={2} margin={2}>\r\n          <TextField style={{ background: \"white\", borderRadius: \"10px\" }} label=\"Add task\" variant=\"outlined\" onChange={handleChange} value={input} required />\r\n          <div className=''>\r\n            <DatePicker\r\n              selected={props.todos.dueDate}\r\n              onChange={props.addDueDate}\r\n              className='addDueDateInput'\r\n              placeholderText=\"MM/DD/YYYY\"\r\n              required\r\n            />\r\n          </div>\r\n          <Button sx={{ width: \"110px\" }} type=\"submit\" variant=\"contained\">Add</Button>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addDueDate: (date) => {\r\n      dispatch(addDueDate(date));\r\n    },\r\n    dispatch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);\r\n","import React from 'react';\r\nclass List extends React.Component {\r\n    render() {\r\n        // let yesterday = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\r\n        // let tomorrow = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\r\n        // let today = new Date() \r\n        return (\r\n            <div className=\"list\">\r\n                <ul>\r\n                    {this.props.displayList.map((value, index) => {\r\n                        let dateTime;\r\n                        // let dueDate = new Date(value.text.dueDate)\r\n                        const { diffDays } = value.text;\r\n                        // let diffTime;\r\n                        // if(value){\r\n                        //      diffTime = (dueDate.getTime() - today.getTime());\r\n                        //      diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \r\n                        // }\r\n                        // console.log(diffDays)\r\n                        if (diffDays === 0) {\r\n                            dateTime = 'Today'\r\n                        }\r\n                        else if (diffDays > 0) {\r\n                            dateTime = `${diffDays} days remaining`;\r\n                        }\r\n                        else if (diffDays < 0) {\r\n                            dateTime = `${Math.abs(diffDays)} days before`;\r\n                        }\r\n                        return (\r\n                            <li key={index} className={value.text.status} title='Click to mark as done' id={value.id} onClick={(e) => this.props.statusToggle(e)}>\r\n                                <div className={`listTitle ${value.text.status}`} id={value.id}>{value.text.name}</div>\r\n                                <span className='dateTime' id={value.id} title={value.text.dueDate}>{dateTime} </span>\r\n                                <span className='close' id={value.id} onClick={(e) => this.props.handleDeleteList(e)}>\r\n                                    X\r\n                          </span>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default List;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Filter from './Filter';\r\nimport { updateTodoState, deleteList, setVisibilityFilter, statusToggleTodo } from '../actions'\r\nimport AddTodo from '../containers/AddTodo.js'\r\nimport List from '../containers/List';\r\nimport { getAuth } from '@firebase/auth';\r\nimport { getDatabase, ref, child, get, update, remove, onChildAdded } from \"firebase/database\";\r\nimport Loader from 'react-loader-spinner'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst Home = (props) => {\r\n  const listQueue = [];\r\n  const auth = getAuth()\r\n  useEffect(() => {\r\n    /* Create reference to messages in Firebase Database */\r\n    // if(props.email){\r\n    //   fire.database().ref('email').push({email:props.email})\r\n    // }\r\n    //Get the current userID\r\n    if (auth.currentUser) {\r\n      const userId = auth.currentUser.uid;\r\n      //  console.log(fire.database().ref('users/' + userId))\r\n\r\n      const db = getDatabase();\r\n      const dbRef = ref(getDatabase());\r\n      get(child(dbRef, `users/${userId}`)).then((snapshot) => {\r\n        if (snapshot.exists()) {\r\n          console.log(snapshot.val());\r\n          update(ref(db, 'users/' + userId), {\r\n            email: props.user.email,\r\n          })\r\n        } else {\r\n          console.log(\"No data available\");\r\n        }\r\n      }).catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n      const listRef = ref(db, 'users/' + userId + '/list')\r\n      onChildAdded(listRef, (snapshot) => {\r\n        /* Update React state when message is added at Firebase Database */\r\n        let listvalue = { text: snapshot.val(), id: snapshot.key };\r\n        console.log(listvalue)\r\n        listQueue.push(listvalue);\r\n        if (listQueue.length > 0) {\r\n          handleChildAddedQueue()\r\n        }\r\n      });\r\n    }\r\n  }, [auth.currentUser]);\r\n\r\n  useEffect(() => {\r\n    if(props.todos.statusToggleData){\r\n      const db = getDatabase();\r\n      const auth = getAuth();\r\n      const userId = auth.currentUser.uid;\r\n      const updateListRef = ref(db, 'users/' + userId + '/list/' + props.todos.statusToggleData.id)\r\n      update(updateListRef, { status: props.todos.statusToggleData.text.status });\r\n    }\r\n  }, [props.todos.statusToggleData])\r\n\r\n  useEffect(() => {\r\n    let list\r\n    switch (props.visibilityFilter) {\r\n      case 'done':\r\n        list = props.todos.list.filter((item, i) => {\r\n          return item.text.status === 'checked'\r\n        })\r\n        break;\r\n      case 'due':\r\n        list = [...props.todos.list].sort(({ text: { diffDays: diffDays1 } }, { text: { diffDays: diffDays2 } }) => { return diffDays1 - diffDays2 });\r\n        break;\r\n      case 'remaining':\r\n        list = props.todos.list.filter((item, i) => {\r\n          return item.text.status !== 'checked'\r\n        })\r\n        break;\r\n      default:\r\n        list = props.todos.list\r\n    }\r\n    console.log(list);\r\n    props.dispatch(updateTodoState({\r\n      displayList: list,\r\n    }))\r\n  }, [props.visibilityFilter])\r\n\r\n  const handleChildAddedQueue = () => {\r\n    const list = [...listQueue];\r\n    console.log('here', props.todos.list)\r\n    console.log(...listQueue)\r\n    const doneTasks = list.filter((item, i) => {\r\n      return item.text.status === 'checked'\r\n    }).length;\r\n    list.forEach((value, index) => {\r\n      let today = new Date();\r\n      let dueDate = new Date(value.text.dueDate)\r\n      let diffTime = (dueDate.getTime() - today.getTime());\r\n      let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      value.text.diffDays = diffDays;\r\n    });\r\n    props.dispatch(updateTodoState({\r\n      list,\r\n      displayList: list,\r\n      doneTasks: doneTasks,\r\n      showListLoader: false\r\n    }))\r\n  }\r\n\r\n  const handleFilterChange = (e) => {\r\n    e.preventDefault();\r\n    const seletedOption = e.target.selectedOptions[0]\r\n    if (!seletedOption) {\r\n      return;\r\n    }\r\n    const optionName = seletedOption.getAttribute('name').toLowerCase();\r\n    props.dispatch(setVisibilityFilter(optionName))\r\n  }\r\n  const statusToggle = (e) => {\r\n    const id = e.target.id;\r\n    props.dispatch(statusToggleTodo(id));\r\n  }\r\n\r\n  const handleDeleteList = (e) => {\r\n    e.stopPropagation();\r\n    let id = e.target.id;\r\n    confirmAlert({\r\n      title: 'Are you sure?',\r\n      message: 'You want to delete this task?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            props.dispatch(deleteList(id));\r\n            const db = getDatabase();\r\n            const auth = getAuth();\r\n            const userId = auth.currentUser.uid;\r\n            const removeListRef = ref(db, 'users/' + userId + '/list/' + id)\r\n            remove(removeListRef);\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => console.log('No')\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AddTodo />\r\n      <div className=\"listWrapper\">\r\n        {props.todos.showListLoader\r\n          ?\r\n          <div className='dataLoader'>\r\n            <Loader\r\n              type=\"Bars\"\r\n              color=\"#00BFFF\"\r\n              height=\"50\"\r\n              width=\"50\"\r\n            />\r\n          </div> :\r\n          props.todos.list.length === 0\r\n            ? <h2>No tasks</h2>\r\n            : <React.Fragment>\r\n              <Filter list={props.todos.list} handleFilterChange={handleFilterChange} />\r\n              <List displayList={props.todos.displayList} handleDeleteList={handleDeleteList} statusToggle={statusToggle} />\r\n            </React.Fragment>\r\n        }\r\n      </div>\r\n      <div className='donetasks'>Total done task:{props.todos.doneTasks}/{props.todos.list.length}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos,\r\n    visibilityFilter: state.visibilityFilter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","const config = {\r\n    apiKey: \"AIzaSyAESAZL26PsKLuD_FQz0oUigvvfByX8PUg\",\r\n    authDomain: \"todolist-95.firebaseapp.com\",\r\n    databaseURL: \"https://todolist-95.firebaseio.com\",\r\n    projectId: \"todolist-95\",\r\n    storageBucket: \"todolist-95.appspot.com\",\r\n    messagingSenderId: \"481397984215\"\r\n  };\r\n  export default config;","import * as React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport {\r\n    useScrollTrigger, Slide, AppBar, Toolbar, Box,\r\n    Tooltip, IconButton, Avatar, Menu, MenuItem, Container\r\n} from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction HideOnScroll(props) {\r\n    const { children, window } = props;\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport default function Header(props) {\r\n    const history = useHistory();\r\n    const { user, handleLogOut } = props\r\n    console.log(history)\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <HideOnScroll>\r\n                <AppBar>\r\n                    <Container maxWidth=\"xl\">\r\n                        <Toolbar disableGutters>\r\n                            <Typography variant=\"h6\" component=\"div\"\r\n                                onClick={() => {\r\n                                    window.location.href = \"/\"\r\n                                }}\r\n                                sx={{\r\n                                    flexGrow: 1\r\n                                }}\r\n                            >\r\n                                Todo List\r\n                            </Typography>\r\n                            {user &&\r\n                                <Box sx={{ flexGrow: 0 }}>\r\n                                    <Tooltip title=\"Open settings\">\r\n                                        <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                                            <Avatar />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Menu\r\n                                        sx={{ mt: '45px' }}\r\n                                        id=\"menu-appbar\"\r\n                                        anchorEl={anchorElUser}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        keepMounted\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={Boolean(anchorElUser)}\r\n                                        onClose={handleCloseUserMenu}\r\n                                    >\r\n                                        <MenuItem onClick={handleCloseUserMenu}>\r\n                                            <Typography textAlign=\"center\" onClick={handleLogOut}>Logout</Typography>\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </Box>\r\n                            }\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\nimport { updateAppState, updateTodoState } from '../../actions'\r\nimport * as firebase from \"firebase/app\";\r\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport Loader from 'react-loader-spinner';\r\nimport config from '../../fire';\r\nimport Header from '../Header/Header';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst App = (props) => {\r\n  const history = useHistory();\r\n  firebase.initializeApp(config);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      props.dispatch(updateAppState({\r\n        showAppLoader: false,\r\n      }))\r\n    }, 3000);\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        props.dispatch(updateAppState({\r\n          user,\r\n          showAppLoader: false,\r\n        }))\r\n        history.push(\"/home\");\r\n      } else {\r\n        history.push(\"/login\")\r\n      }\r\n    })\r\n  }, [history])\r\n\r\n  const handleLogOut = () => {\r\n    const auth = getAuth();\r\n    signOut(auth).then(() => {\r\n      // Sign-out successful.\r\n      props.dispatch(updateAppState({\r\n        user: null,\r\n      }))\r\n      props.dispatch(updateTodoState({\r\n        list: [],\r\n        displayList: [],\r\n        doneTasks: 0,\r\n        showListLoader: true\r\n      }))\r\n      history.push(\"/login\")\r\n    }).catch((error) => {\r\n      // An error happened.\r\n      throw new Error(error);\r\n    });\r\n  }\r\n\r\n  const { user } = props.app;\r\n  return (\r\n    <Header user={user} handleLogOut={handleLogOut} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    app: state.app\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Notification from './Notification';\r\nimport { getAuth, sendPasswordResetEmail } from '@firebase/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function SignIn() {\r\n  const history = useHistory();\r\n  const [message, setMessage] = React.useState('');\r\n  const [openNotification, setOpenNotification] = React.useState(false);\r\n  const handleForgetPassword = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n    const email = data.get('email');\r\n    const auth = getAuth();\r\n    sendPasswordResetEmail(auth, email).then((user) => {\r\n      // alert('Reset password link is sent to your email')\r\n      setOpenNotification(true);\r\n      setMessage(\"Reset password link is sent to your email.\")\r\n      setTimeout(() => {history.push(\"/\")}, 3000)\r\n    }).catch((error) => {\r\n      console.log('Error occurred', error)\r\n      // this.props.dispatch(updateAppState({ error: error.message }))\r\n      // this.setState({ error: error.message });\r\n      setMessage(\"Error occurred.\")\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Your Password\r\n        </Typography>\r\n        <Box component=\"form\" onSubmit={handleForgetPassword} sx={{ mt: 1 }}>\r\n          <TextField\r\n            type='email'\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Notification message={message} openNotification={openNotification} setOpenNotification={setOpenNotification} />\r\n    </Container>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport history from \"./history\";\r\nimport Login from './components/Login/Login';\r\nimport Signup from './components/Signup/Signup';\r\nimport Home from './components/Home';\r\nimport App from './components/App/App';\r\nimport ForgetPassword from './components/ForgetPassword';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Route path=\"/\" component={App} />\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/signup\" component={Signup} />\r\n                    <Route path=\"/home\" component={Home} />\r\n                    <Route path=\"/forgetPassword\" component={ForgetPassword} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","const app = (state = {\r\n  showAppLoader: true,\r\n  showSignup: false,\r\n  showFP:false,\r\n  user: null,\r\n  name: null,\r\n  email: null,\r\n  password: null,\r\n  error: null\r\n}, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_APP_STATE': \r\n    return {\r\n      ...state,\r\n      ...action.state,\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default app","const todos = (state = {\r\n  input: '',\r\n  list: [],\r\n  displayList: [],\r\n  currentTodoData: null,\r\n  statusToggleData: null,\r\n  doneTasks: 0,\r\n  dueDate: null,\r\n  showListLoader: true,\r\n  filter: null,\r\n}, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO': {\r\n      const currentTodoData = {};\r\n      currentTodoData.name = action.input;\r\n      currentTodoData.status = '';\r\n      const dueDate = (state.dueDate.getMonth() + 1) + '/' + state.dueDate.getDate() + '/' + state.dueDate.getFullYear();\r\n      currentTodoData.dueDate = dueDate\r\n      return {\r\n        ...state,\r\n        currentTodoData,\r\n        input: '',\r\n        dueDate: null,\r\n      }\r\n    }\r\n    case 'ADD_DUE_DATE': {\r\n      return {\r\n        ...state,\r\n        dueDate: action.date,\r\n      }\r\n    } \r\n    case 'UPDATE_TODO_STATE':\r\n      return {\r\n        ...state,\r\n        ...action.state,\r\n      }\r\n    case 'DELETE_LIST': {\r\n      const list = state.list.filter((item, i) => {\r\n        return item.id !== action.id\r\n      })\r\n      const displayList = state.displayList.filter((item, i) => {\r\n        return item.id !== action.id\r\n      })\r\n      const doneTasks = list.filter((item, i) => {\r\n        return item.status === 'checked'\r\n      }).length;\r\n      return {\r\n        ...state,\r\n        list: list,\r\n        displayList: displayList,\r\n        doneTasks: doneTasks,\r\n      }\r\n    }\r\n    case 'STATUS_TOGGLE_TODO': {\r\n      const statusToggleData = state.list.find((item) => {\r\n        return item.id === action.id;\r\n      });\r\n      statusToggleData.text.status = statusToggleData.text.status === 'checked' ? '' : 'checked';\r\n      const doneTasks = state.list.filter((item, i) => {\r\n        return item.text.status === 'checked'\r\n      }).length;\r\n      return {\r\n        ...state,\r\n        statusToggleData,\r\n        doneTasks,\r\n      }\r\n    } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport app from './app'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  app,\r\n  todos,\r\n  visibilityFilter\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from './reducers'\r\nimport logger from \"redux-logger\";\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    {},\r\n    applyMiddleware(thunk)\r\n);","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport Routes from './routes'\r\nimport store from \"./store\";\r\n\r\nstore.subscribe(() => {\r\n  console.log(\"Store updated!\", store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Routes />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}