{"version":3,"sources":["List.js","Filter.js","fire.js","Home.js","Login.js","Signup.js","ForgetPassword.js","App.js","serviceWorker.js","index.js"],"names":["List","_this","this","react_default","a","createElement","id","props","displayList","map","value","index","key","className","text","status","onClick","e","statusToggle","concat","name","dateTime","deleteList","React","Component","Filter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","handleFilterChange","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Home","listQueue","input","list","doneTasks","showLoader","filter","handleChange","bind","assertThisInitialized","handleSubmit","setTimeout","setState","_this2","userId","auth","currentUser","uid","database","ref","on","snapshot","val","console","log","set","email","user","listRef","orderByKey","limitToLast","listvalue","length","push","handleChildAddedQueue","forEach","item","i","Number","listValue","preventDefault","target","_this3","len","toConsumableArray","splice","optionName","_this4","seletedOption","selectedOptions","getAttribute","toLowerCase","changeFilter","currentElement","find","update","currentInput","today","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","stopPropagation","remove","displayName","toUpperCase","onSubmit","type","placeholder","react_loader_spinner_default","color","height","width","Fragment","src_Filter","src_List","Login","event","_this$state","password","signInWithEmailAndPassword","then","catch","error","message","code","alert","showSignup","defineProperty","signInWithFacebook","react_fontawesome_index_es","icon","faFacebookSquare","signInWithTwitter","faTwitterSquare","signInWithGoogle","faGooglePlusSquare","required","handleShowComponent","Signup","createUserWithEmailAndPassword","updateProfile","style","border","ForgetPassword","handleForgetPassword","sendPasswordResetEmail","App","showFP","onAuthStateChanged","hasOwnProperty","cvar","_this$props","signOut","margin","src_Home","src_ForgetPassword","src_Signup_0","src_Login_0","firebaseAppAuth","providers","facebookProvider","FacebookAuthProvider","twitterProvider","TwitterAuthProvider","googleProvider","GoogleAuthProvider","withFirebaseAuth","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d974471.chunk.js","sourcesContent":["import React from 'react';\nclass List extends React.Component{\n    render () {\n        return (\n            <ul id=\"myUL\">\n                {this.props.displayList.map((value, index) => {\n                    return (\n                        <li key={index} className={value.text.status} id={value.id} onClick={(e)=>this.props.statusToggle(e)}>\n                        <div className={`listTitle ${value.text.status}`} id={value.id}>{value.text.name}</div>\n                        <span className='dateTime' id={value.id}>{value.text.dateTime} </span>\n                        <span className='close' id={value.id} onClick={(e)=>this.props.deleteList(e)}>\n                        X\n                          </span>\n                          </li>\n                    )\n                })}\n                </ul>\n        )\n    }\n\n}\nexport default List;","import React, { Component } from 'react';\nclass Filter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n    render() {\n        return (\n            <div className='Filter'>\n                <div className=\"filterWrapper\">\n                    <div className=\"row\">\n                        <div className='filterHeading'> Filter </div>\n                        <div className='selectWrapper'>\n                        <select name='filter' onChange={this.props.handleFilterChange}>\n                            <option name=\"all\" value=\"Sort By Date Created\">Sort By Date Created</option>\n                            <option name=\"done\" value=\"All Done Task\">All Done Task</option>\n                            <option name=\"remaining\" value=\"Remaining Task\">Remaining Task</option>\n                        </select>\n                        </div>  \n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import * as firebase from 'firebase'\nvar config = {\n    apiKey: \"AIzaSyAESAZL26PsKLuD_FQz0oUigvvfByX8PUg\",\n    authDomain: \"todolist-95.firebaseapp.com\",\n    databaseURL: \"https://todolist-95.firebaseio.com\",\n    projectId: \"todolist-95\",\n    storageBucket: \"todolist-95.appspot.com\",\n    messagingSenderId: \"481397984215\"\n  };\n  var fire = firebase.initializeApp(config);\n  export default fire;","import React, { Component } from 'react';\nimport List from './List';\nimport Filter from './Filter';\nimport fire from './fire';\nimport Loader from 'react-loader-spinner'\nimport './App.css';\n//import Menu from './Menu';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.listQueue = [];\n    this.state = {\n      input: '',\n      list: [],\n      displayList: [],\n      doneTasks: 0,\n      showLoader: true,\n      filter: null\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleFilterChange = this.handleFilterChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    //this.handleClick = this.handleClick.bind(this)\n    this.deleteList = this.deleteList.bind(this)\n    this.statusToggle = this.statusToggle.bind(this)\n    setTimeout(() => {\n      this.setState({ showLoader: false })\n    }, 3000);\n  }\n  componentWillMount() {\n    /* Create reference to messages in Firebase Database */\n    // if(this.props.email){\n    //   fire.database().ref('email').push({email:this.props.email})\n    // }\n\n    //Get the current userID\n    var userId = fire.auth().currentUser.uid;\n    //  console.log(fire.database().ref('users/' + userId))\n    fire.database().ref('users/' + userId).on('value', (snapshot) => {\n      if (snapshot.val() === null) {\n        console.log('siddharth')\n        fire.database().ref('users/' + userId).set({\n          email: this.props.user.email\n        });\n      }\n    });\n\n    let listRef = fire.database().ref('users/' + userId + '/list').orderByKey().limitToLast(100);\n    listRef.on('child_added', snapshot => {\n      /* Update React state when message is added at Firebase Database */\n      let listvalue = { text: snapshot.val(), id: snapshot.key };\n      console.log(this.state.list, \"outside\", this.listQueue.length)\n      this.listQueue.push(listvalue);\n      if (this.listQueue.length === 1) {\n        this.handleChildAddedQueue()\n      }\n\n    })\n    listRef.on('child_changed', snapshot => {\n      let index = -1;\n      this.state.list.forEach((item, i) => {\n\n        if (item.id === Number(snapshot.key)) {\n          index = i\n        }\n      })\n      let listValue = { text: snapshot.val(), id: snapshot.key };\n      let list = this.state.list\n      list[index] = listValue\n      const doneTasks = list.filter((item, i) => {\n        return item.text.status === 'checked'\n      }).length;\n      this.setState({\n        list: list,\n        doneTasks: doneTasks\n      });\n\n    })\n    listRef.on('child_removed', snapshot => {\n      let index = -1;\n      this.state.list.forEach((item, i) => {\n\n        if (item.id === Number(snapshot.key)) {\n          index = i\n        }\n      })\n      const list = this.state.list.filter((item, i) => {\n        return i !== index\n      })\n      const doneTasks = list.filter((item, i) => {\n        return item.text.status === 'checked'\n      }).length;\n      this.setState({\n        list: list,\n        doneTasks: doneTasks\n      });\n    })\n\n  }\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      list: this.state.list,\n      input: e.target.value\n    })\n    // console.log(this.state)\n  }\n  handleChildAddedQueue() {\n    const len = this.listQueue.length;\n    console.log(\"handleChildAddedQueue\", this.listQueue.length)\n    const list = [...this.state.list, ...this.listQueue];\n    const doneTasks = list.filter((item, i) => {\n      return item.text.status === 'checked'\n    }).length;\n    this.setState({\n      list,\n      displayList: list,\n      doneTasks: doneTasks,\n      showLoader: false\n    }, () => {\n      this.listQueue.splice(0, len);\n      if (this.listQueue.length > 0) {\n        this.handleChildAddedQueue();\n      }\n\n    });\n  }\n  changeFilter() {\n    let list\n    switch (this.state.optionName) {\n      case 'done':\n        list = this.state.list.filter((item, i) => {\n          return item.text.status === 'checked'\n        })\n        break;\n      case 'remaining':\n        list = this.state.list.filter((item, i) => {\n          return item.text.status !== 'checked'\n        })\n        break;\n      default:\n        list = this.state.list\n    }\n    console.log(list)\n    this.setState({\n      displayList: list,\n    })\n  }\n  handleFilterChange(e) {\n    e.preventDefault();\n    const seletedOption = e.target.selectedOptions[0]\n    if (!seletedOption) {\n      return;\n    }\n    const optionName = seletedOption.getAttribute('name').toLowerCase();\n    this.setState({\n      optionName\n    }, () => { this.changeFilter(); })\n  }\n  statusToggle(e) {\n    const list = this.state.list;\n    let id = e.target.id;\n    let currentElement = list.find((item) => {\n      return item.id === id;\n    });\n    if (currentElement.text.status === '')\n      currentElement.text.status = 'checked';\n    else\n      currentElement.text.status = '';\n\n    const doneTasks = list.filter((item, i) => {\n      return item.text.status === 'checked'\n    }).length;\n    this.setState({\n      list: list,\n      doneTasks: doneTasks\n    });\n    this.changeFilter()\n    var userId = fire.auth().currentUser.uid;\n    fire.database().ref('users/' + userId + '/list/' + id).update({ status: currentElement.text.status });\n    // console.log(this.state)\n\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    //rooms.push({roomId:this.state.roomId+1,name:name,messages:messages});\n    if (this.state.input !== '') {\n      console.log('here')\n      this.currentInput = {};\n      this.currentInput.name = this.state.input;\n      this.currentInput.status = '';\n      var today = new Date();\n      var date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n      var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      var dateTime = date + ' ' + time;\n      this.currentInput.dateTime = dateTime;\n\n      this.setState({\n        list: [...this.state.list, this.currentInput],\n        input: ''\n      });\n      var userId = fire.auth().currentUser.uid;\n      fire.database().ref('users/' + userId + '/list').push(this.currentInput);\n    }\n  }\n  deleteList(e, index) {\n    e.stopPropagation();\n    console.log('deleteList')\n    let id = e.target.id;\n    console.log(id, this.state.list)\n    const list = this.state.list.filter((item, i) => {\n      return item.id !== id\n    })\n    const displayList = this.state.displayList.filter((item, i) => {\n      return item.id !== id\n    })\n    const doneTasks = list.filter((item, i) => {\n      return item.status === 'checked'\n    }).length;\n    console.log(list)\n    var userId = fire.auth().currentUser.uid;\n    fire.database().ref('users/' + userId + '/list/' + id).remove();\n    this.setState({\n      list: list,\n      displayList: displayList,\n      doneTasks: doneTasks\n    });\n  }\n  render() {\n    return (\n      <div className=\"Home\">\n        {\n          this.props.user.displayName\n            ?\n            <div className='header'>{this.props.user.displayName.toUpperCase()}</div>\n            : <div className='header'>{this.props.user.displayName.toUpperCase()}</div>\n        }\n        <div className='list'>\n          <div id=\"myDIV\" className=\"header\">\n            <form onSubmit={this.handleSubmit}>\n              <h2 >To Do List</h2>\n              <input type=\"text\" id=\"myInput\" placeholder=\"Add task...\" onChange={this.handleChange} value={this.state.input} />\n              <input className=\"addBtn\" type=\"submit\" value=\"Add\" />\n            </form>\n          </div>\n          {this.state.showLoader\n            ?\n            <div className='dataLoader'>\n              <Loader\n                type=\"Bars\"\n                color=\"#00BFFF\"\n                height=\"50\"\n                width=\"50\"\n              />\n            </div> :\n            this.state.list.length === 0\n              ? <h2>No tasks</h2>\n              : <React.Fragment>\n                <Filter list={this.state.list} handleFilterChange={this.handleFilterChange} />\n                <List displayList={this.state.displayList} deleteList={this.deleteList} statusToggle={this.statusToggle} />\n              </React.Fragment>\n          }\n          <div className='donetasks'>Total done task:{this.state.doneTasks}/{this.state.list.length}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport fire from './fire';\nimport './Login.css';\nimport { faFacebookSquare, faTwitterSquare, faGooglePlusSquare } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSignup: this.props.showSignup,\n      name: null,\n      email: null,\n      password: null,\n      error: null\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n        [e.target.name]:e.target.value\n    })\n }\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    fire.auth().signInWithEmailAndPassword(email, password).then((user) => {\n      console.log('Login successfully', user)\n    })\n    .catch((error) => {\n        console.log('Error occurred', error)\n        this.setState({ error: error.message });\n        if (error.code === 'auth/wrong-password') {\n          alert('Wrong password');\n        } else if (error.code === 'auth/user-not-found'){\n          alert('There is no user record corresponding to this email. Please signup or Login with Social Media');\n        } else{\n          alert(error.message);\n        }\n      });\n  }\n\n  render() {\n    return (\n      <div className='Login'>\n        <div className=\"container\">\n            <div className=\"row\">\n              <h2 >Login with Social Media or Manually</h2>\n              <div className=\"vl\">\n                <span className=\"vl-innertext\">or</span>\n              </div>\n\n              <div className=\"col\">\n                <button onClick={this.props.signInWithFacebook} className=\"fb btn\">\n                  <FontAwesomeIcon icon={faFacebookSquare} /> Login with Facebook\n                   </button>\n                <button onClick={this.props.signInWithTwitter} className=\"twitter btn\">\n                  <FontAwesomeIcon icon={faTwitterSquare} /> Login with Twitter\n                  </button>\n                <button onClick={this.props.signInWithGoogle} className=\"google btn\">\n                  <FontAwesomeIcon icon={faGooglePlusSquare} /> Login with Google+\n                  </button>\n              </div>\n\n              <div className=\"col\">\n                <div className=\"hide-md-lg\">\n                  <p>Or sign in manually:</p>\n                </div>\n                <form>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required onChange={this.handleChange}/>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required onChange={this.handleChange} />\n                <input type=\"submit\" value=\"Login\" onClick={this.handleSubmit}/>\n                </form>\n              </div>\n           </div> \n        </div>\n\n        <div className=\"bottom-container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <button className=\"btn\" onClick={() => { this.props.handleShowComponent('showSignup',true) }}>Sign up</button>\n            </div>\n            <div className=\"col\">\n              <button className=\"btn\" onClick={() => { this.props.handleShowComponent('showFP',true) }}>Forgot password?</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './Signup.css';\nimport fire from './fire';\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showSignup:this.props.showSignup,\n            name:null,\n            email:null,\n            password:null,\n            error:null\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { email, password } = this.state;\n       fire.auth().createUserWithEmailAndPassword(email, password).then((user) => {\n        console.log('Signup successfully',user)\n        return user.user.updateProfile({\n            displayName: this.state.name\n          })\n      })\n      .catch((error) => {\n        console.log('Error occurred',error)\n        this.setState({ error: error.message });\n      });\n         \n      };\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n     }\n    render() {\n        return (\n            <div className='Signup'>\n                <form style={{ border: '1px solid #ccc' }}>\n                    <div className=\"container\">\n                        <h1>Sign Up</h1>\n                        <h3>{this.state.error}</h3>\n                        <p>Please fill in this form to create an account.</p>\n                        <hr />\n                        <input type=\"text\" placeholder=\"Enter Name\" name=\"name\" required onChange={this.handleChange}/>\n                        <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={this.handleChange}/>\n                        <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required onChange={this.handleChange}/>\n\n                        <input type=\"password\" placeholder=\"Repeat Password\" name=\"password-repeat\" required onChange={this.handleChange}/>\n\n                        <div className=\"clearfix\">\n                            <button type=\"submit\" className=\"signupbtn\" onClick={this.handleSubmit}>Submit</button>\n                            <button type=\"button\" className=\"cancelbtn\" onClick={()=>{this.props.handleShowComponent('showSignup',false)}}>Cancel</button>\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n        );\n    }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport fire from './fire';\nclass ForgetPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email:null,\n            error:null\n        }\n        this.handleForgetPassword = this.handleForgetPassword.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleForgetPassword() {\n        const { email } = this.state;\n        fire.auth().sendPasswordResetEmail(email).then((user) =>  {\n            alert('Reset password link is sent to your email')\n            this.props.handleShowComponent('showFP',false)\n        }).catch((error) => {\n            console.log('Error occurred', error)\n            // alert(error.message)\n            this.setState({ error: error.message });\n        });\n    }\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        return (\n            <div className=\"ForgetPassword\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h2>Forget Password</h2>\n                        <h4>{this.state.error}</h4>\n                        <input type=\"email\" placeholder=\"Enter Email\" name=\"email\" required onChange={this.handleChange}/>\n                    </div>\n                </div>\n\n                <div className=\"clearfix\">\n                            <button type=\"submit\" className=\"signupbtn\" onClick={this.handleForgetPassword}>Submit</button>\n                            <button type=\"button\" className=\"cancelbtn\" onClick={()=>{this.props.handleShowComponent('showFP',false)}}>Cancel</button>\n                        </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ForgetPassword;","import React, { Component } from 'react';\n//import './App.css';\nimport Home from './Home';\nimport Login from './Login'\nimport Signup from './Signup'\nimport ForgetPassword from './ForgetPassword'\nimport fire from './fire';\nimport * as firebase from 'firebase/app';\nimport Loader from 'react-loader-spinner'\nimport 'firebase/auth';\nimport withFirebaseAuth from 'react-with-firebase-auth';\n//import Menu from './Menu';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showLoader: true,\n      showSignup: false,\n      showFP:false\n    }\n    this.handleShowComponent = this.handleShowComponent.bind(this)\n    setTimeout(() => {\n      this.setState({ showLoader: false })\n    }, 3000);\n    firebase.auth().onAuthStateChanged(user => {\n      if (user.hasOwnProperty('user'))\n        console.log('onAuthStateChanged', user)\n      if (user) {\n        this.setState({ showLoader: false })\n      }\n      else if (user.hasOwnProperty('user')) {\n        this.props.user = user.user\n      }\n    })\n  }\n  handleShowComponent(cvar,val) {\n    this.setState({ [cvar]: val })\n  }\n  render() {\n    console.log('render')\n   \n    const {\n      user,\n      signOut,\n      signInWithFacebook,\n      signInWithTwitter,\n      signInWithGoogle,\n    } = this.props;\n\n    return (\n      <div className=\"App\">\n        {\n          this.state.showLoader\n            ?\n            <div className='loader'>\n              <Loader\n                type=\"Plane\"\n                color=\"#ffa500\"\n                height=\"100\"\n                width=\"100\"\n              />\n            </div>\n            :\n            <React.Fragment> {\n              user\n                ?\n                <button type=\"button\" className=\"btn btn-default btn-sm logout\" onClick={signOut} >\n                  Log out\n                   </button>\n                : <div id=\"myDIV\" className=\"header\"> <h2 style={{ margin: 0 }}>To Do List</h2> </div>\n            } {\n                user\n                  ? <Home user={user} />\n                  : !this.state.showSignup && !this.state.showFP\n                    ?\n                    <Login\n                      signInWithFacebook={signInWithFacebook}\n                      signInWithTwitter={signInWithTwitter}\n                      signInWithGoogle={signInWithGoogle}\n                      handleShowComponent={this.handleShowComponent}\n                    /> : !this.state.showFP\n                    ?\n                    <Signup handleShowComponent={this.handleShowComponent} user={user}/>\n                    : <ForgetPassword handleShowComponent={this.handleShowComponent} user={user}/> \n              }\n            </React.Fragment>\n        }\n      </div>\n    );\n  }\n}\nconst firebaseAppAuth = fire.auth();\nconst providers = {\n  facebookProvider: new firebase.auth.FacebookAuthProvider(),\n  twitterProvider: new firebase.auth.TwitterAuthProvider(),\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}